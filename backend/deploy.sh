#!/bin/bash

# –î–µ–ø–ª–æ–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è Convertik Backend –Ω–∞ ponravilos.ru
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π Convertik Backend –Ω–∞ ponravilos.ru..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "docker-compose.production.yml" ]; then
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ backend/${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ .env.production —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -f ".env.production" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –§–∞–π–ª .env.production –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    echo "–°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ env.production.example:"
    echo "cp env.production.example .env.production"
    echo "–ò –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!"
    exit 1
fi

echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source .env.production

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
if [ "$POSTGRES_PASSWORD" = "your_secure_postgres_password_here" ]; then
    echo -e "${RED}‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–º–µ–Ω–∏—Ç–µ POSTGRES_PASSWORD –≤ .env.production${NC}"
    exit 1
fi

if [ "$ADMIN_TOKEN" = "your_super_secure_admin_token_here" ]; then
    echo -e "${RED}‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–º–µ–Ω–∏—Ç–µ ADMIN_TOKEN –≤ .env.production${NC}"
    exit 1
fi

echo "üê≥ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)..."
docker-compose -f docker-compose.production.yml down || true

echo "üèóÔ∏è  –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑..."
docker-compose -f docker-compose.production.yml build --no-cache

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
docker-compose -f docker-compose.production.yml up -d

echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose -f docker-compose.production.yml ps

echo "üìä –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker-compose -f docker-compose.production.yml exec convertik-api alembic upgrade head

echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo ""
echo "üåê API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8001"
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://localhost:8001/docs"
echo ""
echo "üìù –î–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Caddy:"
echo "1. –î–æ–±–∞–≤—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ caddy-convertik.conf –≤ /opt/n8n-docker-caddy/caddy_config/Caddyfile"
echo "2. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ Caddy: docker exec -it n8n-docker-caddy-caddy-1 caddy reload --config /etc/caddy/Caddyfile"
echo "3. –î–æ–±–∞–≤—å—Ç–µ DNS –∑–∞–ø–∏—Å—å: convertik A 185.70.105.198"
echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "docker-compose -f docker-compose.production.yml logs -f convertik-api  # –ª–æ–≥–∏ API"
echo "docker-compose -f docker-compose.production.yml logs -f convertik-db   # –ª–æ–≥–∏ –ë–î"
echo "docker-compose -f docker-compose.production.yml restart convertik-api  # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ API"